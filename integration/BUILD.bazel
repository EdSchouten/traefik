load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "go_default_library",
    srcs = ["fake_dns_server.go"],
    importpath = "github.com/containous/traefik/integration",
    visibility = ["//visibility:public"],
    deps = [
        "//log:go_default_library",
        "//vendor/github.com/miekg/dns:go_default_library",
    ],
)

go_test(
    name = "go_default_test",
    srcs = [
        "access_log_test.go",
        "acme_test.go",
        "constraint_test.go",
        "consul_catalog_test.go",
        "consul_test.go",
        "docker_compose_test.go",
        "docker_test.go",
        "dynamodb_test.go",
        "error_pages_test.go",
        "etcd3_test.go",
        "eureka_test.go",
        "file_test.go",
        "grpc_test.go",
        "healthcheck_test.go",
        "hostresolver_test.go",
        "https_test.go",
        "integration_test.go",
        "log_rotation_test.go",
        "marathon15_test.go",
        "marathon_test.go",
        "mesos_test.go",
        "proxy_protocol_test.go",
        "ratelimit_test.go",
        "rest_test.go",
        "retry_test.go",
        "simple_test.go",
        "timeout_test.go",
        "tls_client_headers_test.go",
        "tracing_test.go",
        "websocket_test.go",
    ],
    embed = [":go_default_library"],
    deps = [
        "//cluster:go_default_library",
        "//config:go_default_library",
        "//integration/helloworld:go_default_library",
        "//integration/try:go_default_library",
        "//log:go_default_library",
        "//old/middlewares/accesslog:go_default_library",
        "//old/provider/acme:go_default_library",
        "//old/provider/label:go_default_library",
        "//old/types:go_default_library",
        "//testhelpers:go_default_library",
        "//tls:go_default_library",
        "//vendor/github.com/BurntSushi/toml:go_default_library",
        "//vendor/github.com/abronan/valkeyrie:go_default_library",
        "//vendor/github.com/abronan/valkeyrie/store:go_default_library",
        "//vendor/github.com/abronan/valkeyrie/store/consul:go_default_library",
        "//vendor/github.com/abronan/valkeyrie/store/etcd/v3:go_default_library",
        "//vendor/github.com/aws/aws-sdk-go/aws:go_default_library",
        "//vendor/github.com/aws/aws-sdk-go/aws/credentials:go_default_library",
        "//vendor/github.com/aws/aws-sdk-go/aws/session:go_default_library",
        "//vendor/github.com/aws/aws-sdk-go/service/dynamodb:go_default_library",
        "//vendor/github.com/aws/aws-sdk-go/service/dynamodb/dynamodbattribute:go_default_library",
        "//vendor/github.com/containous/staert:go_default_library",
        "//vendor/github.com/docker/docker/pkg/namesgenerator:go_default_library",
        "//vendor/github.com/gambol99/go-marathon:go_default_library",
        "//vendor/github.com/go-check/check:go_default_library",
        "//vendor/github.com/gorilla/websocket:go_default_library",
        "//vendor/github.com/hashicorp/consul/api:go_default_library",
        "//vendor/github.com/libkermit/compose/check:go_default_library",
        "//vendor/github.com/libkermit/docker:go_default_library",
        "//vendor/github.com/libkermit/docker-check:go_default_library",
        "//vendor/github.com/miekg/dns:go_default_library",
        "//vendor/github.com/vdemeester/shakers:go_default_library",
        "//vendor/golang.org/x/net/websocket:go_default_library",
        "@org_golang_google_grpc//:go_default_library",
        "@org_golang_google_grpc//credentials:go_default_library",
    ],
)

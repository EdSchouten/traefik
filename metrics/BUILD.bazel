load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "go_default_library",
    srcs = [
        "datadog.go",
        "influxdb.go",
        "metrics.go",
        "prometheus.go",
        "statsd.go",
    ],
    importpath = "github.com/containous/traefik/metrics",
    visibility = ["//visibility:public"],
    deps = [
        "//config:go_default_library",
        "//log:go_default_library",
        "//safe:go_default_library",
        "//types:go_default_library",
        "//vendor/github.com/containous/mux:go_default_library",
        "//vendor/github.com/go-kit/kit/log:go_default_library",
        "//vendor/github.com/go-kit/kit/metrics:go_default_library",
        "//vendor/github.com/go-kit/kit/metrics/dogstatsd:go_default_library",
        "//vendor/github.com/go-kit/kit/metrics/influx:go_default_library",
        "//vendor/github.com/go-kit/kit/metrics/multi:go_default_library",
        "//vendor/github.com/go-kit/kit/metrics/statsd:go_default_library",
        "//vendor/github.com/influxdata/influxdb/client/v2:go_default_library",
        "//vendor/github.com/prometheus/client_golang/prometheus:go_default_library",
        "//vendor/github.com/prometheus/client_golang/prometheus/promhttp:go_default_library",
    ],
)

go_test(
    name = "go_default_test",
    srcs = [
        "datadog_test.go",
        "influxdb_test.go",
        "metrics_test.go",
        "prometheus_test.go",
        "statsd_test.go",
    ],
    embed = [":go_default_library"],
    deps = [
        "//config:go_default_library",
        "//testhelpers:go_default_library",
        "//types:go_default_library",
        "//vendor/github.com/go-kit/kit/metrics:go_default_library",
        "//vendor/github.com/prometheus/client_golang/prometheus:go_default_library",
        "//vendor/github.com/prometheus/client_model/go:go_default_library",
        "//vendor/github.com/stretchr/testify/assert:go_default_library",
        "//vendor/github.com/stvp/go-udp-testing:go_default_library",
    ],
)

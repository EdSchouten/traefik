load("@io_bazel_rules_go//go:def.bzl", "go_library")

go_library(
    name = "go_default_library",
    srcs = [
        "container.go",
        "context.go",
        "empty.go",
        "info.go",
        "interface.go",
        "listener.go",
        "network.go",
        "project.go",
        "project_build.go",
        "project_config.go",
        "project_containers.go",
        "project_create.go",
        "project_delete.go",
        "project_down.go",
        "project_events.go",
        "project_kill.go",
        "project_log.go",
        "project_pause.go",
        "project_port.go",
        "project_ps.go",
        "project_pull.go",
        "project_restart.go",
        "project_run.go",
        "project_scale.go",
        "project_start.go",
        "project_stop.go",
        "project_unpause.go",
        "project_up.go",
        "service.go",
        "service-wrapper.go",
        "utils.go",
        "volume.go",
    ],
    importmap = "github.com/containous/traefik/vendor/github.com/docker/libcompose/project",
    importpath = "github.com/docker/libcompose/project",
    visibility = ["//visibility:public"],
    deps = [
        "//vendor/github.com/docker/libcompose/config:go_default_library",
        "//vendor/github.com/docker/libcompose/logger:go_default_library",
        "//vendor/github.com/docker/libcompose/lookup:go_default_library",
        "//vendor/github.com/docker/libcompose/project/events:go_default_library",
        "//vendor/github.com/docker/libcompose/project/options:go_default_library",
        "//vendor/github.com/docker/libcompose/utils:go_default_library",
        "//vendor/github.com/docker/libcompose/yaml:go_default_library",
        "//vendor/github.com/sirupsen/logrus:go_default_library",
        "//vendor/golang.org/x/net/context:go_default_library",
        "//vendor/gopkg.in/yaml.v2:go_default_library",
    ],
)
